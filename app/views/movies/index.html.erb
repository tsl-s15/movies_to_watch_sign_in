<div class="page-header">
  <h1>
    Movies
    <%= link_to new_movie_url, :class => "btn btn-lg btn-success" do %>
      <i class="fa fa-plus"></i>
    <% end  %>
  </h1>
</div>

<!-- Responsive, Isotope-based layout example -->

<div class="row">
  <div class="col-xs-12">
    <input type="text" id="quicksearch" placeholder="Search Movies (start typing)" class="form-control">
  </div>
</div>

<hr>

<div class="row isotope-container">
<% @movies.each do |movie| %>
  <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 isotope-item">
    <div class="panel panel-default">
      <div class="panel-heading">
        <h3 class="panel-title"><%= movie.title %> (<%= movie.year %>)</h3>
      </div>
      <div class="panel-body">
        <% if user_signed_in? %>
          <% to_watch = ToWatch.where(user_id: current_user.id, movie_id: movie.id).first %>
          <% if to_watch %>
            <div class="btn-group btn-group-justified">
              <%= link_to to_watch_url(to_watch.id), :method => "delete", :class => "btn btn-sm btn-danger" do %>
                <i class="fa fa-times"></i>
                Remove from watch list
              <% end %>
            </div>
          <% else %>
            <%= form_tag to_watches_url, :method => "post", :class => "form-horizontal" do %>
              <!-- Label and input for movie_id -->
              <input type="hidden" id="movie_id" name="movie_id" placeholder="Movie" class="form-control" value="<%= movie.id %>">
            <!-- Label and input for user_id -->
              <input type="hidden" id="user_id" name="user_id" placeholder="User" class="form-control" value="<%= current_user.id %>">

              <button type="submit" class="btn btn-sm btn-success btn-block">
                <i class="fa fa-plus"></i>
                Add to watch list
              </button>
            <% end %>
          <% end %>

        <% end %>
        <div class="btn-group btn-group-justified">
        </div>
        <dl>
          <dt>Duration</dt>
          <dd><%= movie.duration %></dd>

          <dt>Description</dt>
          <dd><%= movie.description %></dd>

          <dt>Image url</dt>
          <dd><%= link_to(image_tag(movie.image_url), movie_url(movie.id)) %></dd>

          <dt>Director</dt>
          <dd><%= link_to(movie.director.name, director_url(movie.director.id)) %></dd>

        </dl>
        <div class="btn-group btn-group-justified">
          <%= link_to movie_url(movie), :class => "btn btn-primary" do %>
            <i class="fa fa-search-plus"></i>
          <% end %>
          <%= link_to edit_movie_url(movie), :class => "btn btn-warning" do %>
            <i class="fa fa-edit"></i>
          <% end %>
          <%= link_to movie_url(movie), :method => "delete", :data => { :confirm => "Do you really want to delete this movie?" }, :class => "btn btn-danger" do %>
            <i class="fa fa-trash-o"></i>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% end %>
</div>

<!-- JavaScript for Isotope layout and quicksearch -->
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/3.1.8/imagesloaded.pkgd.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.0.0/isotope.pkgd.min.js"></script>
<script>
  $(function() {
    // quick search regex
    var qsRegex;

    // init Isotope
    var $container = $('.isotope-container');

    $container.imagesLoaded(function() {
      $container.isotope({
        itemSelector: '.isotope-item',
        layoutMode: 'masonry',
        filter: function() {
          return qsRegex ? $(this).text().match( qsRegex ) : true;
        }
      })
    });

    // use value of search field to filter
    var $quicksearch = $('#quicksearch').keyup( debounce( function() {
      qsRegex = new RegExp( $quicksearch.val(), 'gi' );
      $container.isotope();
    }, 200 ) );

  });

  // debounce so filtering doesn't happen every millisecond
  function debounce( fn, threshold ) {
    var timeout;
    return function debounced() {
      if ( timeout ) {
        clearTimeout( timeout );
      }
      function delayed() {
        fn();
        timeout = null;
      }
      timeout = setTimeout( delayed, threshold || 100 );
    }
  }
</script>

<!-- End responsive, Isotope-based layout example -->
